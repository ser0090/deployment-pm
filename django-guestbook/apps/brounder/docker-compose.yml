version: '3.3'

services:

  traefik:
    image: "traefik:v2.3"
    # las flags siguientes se agregan a la ejecucion del container
    command:
      #- "--log.level=DEBUG"
      # se puede acceder sin https.
      - "--api.insecure=true"
      # los contenedores de docker se puede auto reportar.
      - "--providers.docker=true"
      # los contenedores no son expuestos.
      - "--providers.docker.exposedbydefault=false"
      # puerto de acceso a todos los aplicativos del servidor.
      - "--entrypoints.web.address=:80"
    ports:
      # entrypoint
      - "80:80"
      # dashboard de traefik
      - "8080:8080"
    
    # comparte el socket de comunicacion de docker para manjera el sistema y lo
    # comparte con traefik. Esto es utilizado para obtener las estadisiticas de
    # docker.
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # este servicio idenfica al contendor que responde.
  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
  
  web:
    build: '.'
    image: 'brounder'
    environment:
      DJANGO_PASSWORD: 'pass'
      REDIS_MASTER_SERVICE_HOST: 'redis'
      POSTGRES_SERVICE_HOST: 'postgres'
    # ports:
       # - '8000:8000'
    command: bash -c "python manage.py migrate && gunicorn brounder.wsgi:application -w 2 -b :80"
    volumes:
      - 'cachedata:/cache'
      - 'mediadata:/media'
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`web.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
 
  # Postgress para la pesistencia de datos en base de datos
  postgres:
    container_name: 'postgres'
    image: 'postgres:9.5.3'
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data/'

  # Redis para el cache de jango 
  redis:
    container_name: 'redis'
    image: 'redis:3.2.0'
    ports:
      - '6379:6379'
    volumes:
      - 'redisdata:/data'

# utilizado para la pesistencia de los datos de los containers
volumes:
  pgdata:
  redisdata:
  cachedata:
  mediadata:
